// http://www.codewars.com/kata/calculating-with-functions

// This time we want to write calculations using functions and get the results. Let's have a look at some examples:
//
//seven(times(five())); // must return 35
//four(plus(nine())); // must return 13
//eight(minus(three())); // must return 5
//six(dividedBy(two())); // must return 3
//Requirements:
//There must be a function for each number from 0 ("zero") to 9 ("nine")
//There must be a function for each of the following mathematical operations: plus, minus, times, dividedBy (divided_by in Ruby and Python)
//Each calculation consist of exactly one operation and two numbers
//The most outer function represents the left operand, the most inner function represents the right operand
//Division should be integer division. For example, this should return 2, not 2.666666...:
//
//eight(dividedBy(three()));


function zero(op) {return calc(0, op);}
function one(op) {return calc(1, op);}
function two(op) {return calc(2, op);}
function three(op) {return calc(3, op);}
function four(op) {return calc(4, op);}
function five(op) {return calc(5, op);}
function six(op) {return calc(6, op);}
function seven(op) {return calc(7, op);}
function eight(op) {return calc(8, op);}
function nine(op) {return calc(9, op);}

function plus(x) {
  return function (y) { return y + x; }
}
function minus(x) {
  return function (y) { return y - x; }
}
function times(x) {
  return function (y) { return y * x; }
}
function dividedBy(x) {
  return function (y) { return Math.floor(y / x); }
}

function calc(n, op) {
    if (!op)
        return n;
    return op(n);
}

http://www.codewars.com/kata/opposite-number
http://www.codewars.com/kata/basic-mathematical-operations +
http://www.codewars.com/kata/printing-array-elements-with-comma-delimiters +
http://www.codewars.com/kata/transportation-on-vacation +
http://www.codewars.com/kata/get-the-middle-character +
http://www.codewars.com/kata/partition-on +
http://www.codewars.com/kata/word-count +
http://www.codewars.com/kata/remove-first-and-last-character-part-two +
http://www.codewars.com/kata/implement-array-dot-prototype-dot-filter-1 +
http://www.codewars.com/kata/prefill-an-array +
http://www.codewars.com/kata/cross-product-of-vectors +
http://www.codewars.com/kata/sequence-generator-1 +
https://www.codewars.com/kata/base-conversion +
http://www.codewars.com/kata/closures-and-scopes +
http://www.codewars.com/kata/a-function-within-a-function +
http://www.codewars.com/kata/using-closures-to-share-class-state +
http://www.codewars.com/kata/a-chain-adding-function +
http://www.codewars.com/kata/function-cache +
http://www.codewars.com/kata/stringing-me-along +
http://www.codewars.com/kata/i-spy +
http://www.codewars.com/kata/santaclausable-interface +
http://www.codewars.com/kata/extract-nested-object-reference +
http://www.codewars.com/kata/array-helpers +
http://www.codewars.com/kata/sum-of-digits-slash-digital-root +
http://www.codewars.com/kata/fun-with-es6-classes-number-2-animals-and-inheritance +
http://www.codewars.com/kata/fun-with-es6-classes-number-3-cuboids-cubes-and-getters +
